---
- name: Install psycopg2
  apt: name=python-psycopg2 state=latest

# - name: Install psycopg2
#   pip: name=psycopg2

- name: Create app deployer user
  user: name={{ apps_user }} groups=sudo shell=/bin/bash generate_ssh_key=true

- name: Add authorized_keys to deployer user
  authorized_key: user={{ apps_user }} key="{{ lookup('file', item) }}"
  with_fileglob:
    - ../../../public_keys/*

- name: Create application directories
  file: 'path={{ item }} state=directory owner={{ apps_user }} group={{ apps_user }}'
  with_items:
    - '/u/apps/{{ app_name }}'
    - '/u/apps/{{ app_name }}/shared/config'
    - '/u/apps/{{ app_name }}/shared/log'
    - '/u/apps/{{ app_name }}/shared/public'
    - '/u/apps/{{ app_name }}/shared/tmp/pids'
    - '/u/apps/{{ app_name }}/shared/tmp/sockets'

- name: Copy application configs
  template:
    src: "app_configs/{{ item }}.j2"
    dest: "/u/apps/{{ app_name }}/shared/config/{{ item }}"
    owner: "{{ apps_user }}"
    group: "{{ apps_user }}"
  with_items:
    - database.yml
    - secrets.yml

- name: Copy .env file
  template:
    src: "app_configs/.env.staging"
    dest: "/u/apps/{{ app_name }}/shared/"
    owner: "{{ apps_user }}"
    group: "{{ apps_user }}"

- name: Create application database
  sudo_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    encoding: utf8
    login_user: postgres
    login_password: 12345678
    login_host: localhost
    state: present

- name: Create database user
  postgresql_user:
    name: "{{ db_user }}"
    db: "{{ db_name }}"
    priv: ALL
    login_user: postgres
    login_password: 12345678
    login_host: localhost
    password: "{{ db_user_password }}"
    state: present
